{
	"info": {
		"_postman_id": "00737427-10d3-4d33-875c-a7adb9e708fc",
		"name": "ner_v1_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "City entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2e89180-b51e-44fe-87af-a971b48f15bb",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['city detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"City Entity - Validate detected TO\"] = responseData.data[0].entity_value.to === data.city_expected.to",
							"        tests[\"City Entity - Validate detected From\"] = responseData.data[0].entity_value.from === data.city_expected.from",
							"        tests[\"City Entity - Validate detected original text\"] = responseData.data[0].original_text === data.city_expected.original_text",
							"        tests[\"City Entity - Validate detected value\"] = responseData.data[0].entity_value.value.toLowerCase()=== data.city_expected.value.toLowerCase()",
							"        tests[\"City Entity - Validate Normal\"] = responseData.data[0].entity_value.normal === data.city_expected.normal",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/city/?message={{city_message}}&entity_name={{city_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"city",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{city_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{city_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Time Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c4a0338-38cf-482b-be58-de81496136bb",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['Time Range detected'] = true === false;",
							"    }",
							"    else{",
							"        for (i = 0; i < responseData.data.length; i++)",
							"        {",
							"        tests[\"Time Entity - Validate detected original text\" + i] = responseData.data[i].original_text === data.time_expected[i].original_text",
							"        tests[\"Time Entity - Validate detected minute in normal format\"] = responseData.data[i].entity_value.mm === data.time_expected[i].mm",
							"        tests[\"Time Entity - Validate detected hour in normal\"] = responseData.data[i].entity_value.hh === data.time_expected[i].hh",
							"        tests[\"Time Entity - Validate detected normal format\"] = responseData.data[i].entity_value.nn === data.time_expected[i].nn",
							"        }",
							"        ",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/time/?message={{time_message}}&entity_name={{time_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"time",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{time_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{time_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Person Name Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aab03db0-2700-4ed1-a9d4-978acce08ba1",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['person namedetected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Person Name Entity - Validate detected original text\"] = responseData.data[0].original_text === data.person_name_expected.original_text",
							"        tests[\"Person Name Entity - Validate detected first name\"] = responseData.data[0].entity_value.first_name === data.person_name_expected.first_name",
							"        tests[\"Person Name Entity - Validate detected last name\"] = responseData.data[0].entity_value.last_name === data.person_name_expected.last_name        ",
							"        tests[\"Person Name Entity - Validate detected middle name\"] = responseData.data[0].entity_value.middle_name === data.person_name_expected.middle_name",
							"        tests[\"Person Name Entity - Validate detected model verified\"] = responseData.data[0].entity_value.model_verified === data.person_name_expected.model_verified",
							"        tests[\"Person Name Entity - Validate detected datastore verified\"] = responseData.data[0].entity_value.datastore_verified === data.person_name_expected.datastore_verified",
							"        ",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/person_name/?message={{person_name_message}}&entity_name={{person_name_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"person_name",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{person_name_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{person_name_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PNR Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c88850db-8dc1-4ca4-bb67-66568fb04fd1",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['PNR detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"PNR Entity - Validate detected original text\"] = responseData.data[0].original_text === data.pnr_expected.original_text",
							"        tests[\"PNR Entity - Validate detected PNR NUMBER\"] = responseData.data[0].entity_value.value === data.pnr_expected.value",
							"        }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/pnr/?message={{pnr_message}}&entity_name={{pnr_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"pnr",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{pnr_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{pnr_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Time Range Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6726f8f5-a85a-46c8-9d67-c483d2d68db3",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['Time detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Time Range Entity - Validate detected start minute\"] = responseData.data[0].entity_value.mm === data.time_range_expected[0].mm",
							"        tests[\"Time Range Entity - Validate detected start hour\"] = responseData.data[0].entity_value.hh === data.time_range_expected[0].hh",
							"        tests[\"Time Range Entity - Validate detected range\"] = responseData.data[0].entity_value.range === data.time_range_expected[0].range",
							"        tests[\"Time Range Entity - Validate detected time slot\"] = responseData.data[0].entity_value.nn === data.time_range_expected[0].nn",
							"        tests[\"Time Range Entity - Validate detected original text1\"] = responseData.data[0].original_text === data.time_range_expected[0].original_text",
							"        ",
							"        tests[\"Time Range Entity - Validate detected original text2\"] = responseData.data[1].original_text === data.time_range_expected[1].original_text",
							"        tests[\"Time Range Entity - Validate detected end minute\"] = responseData.data[1].entity_value.mm === data.time_range_expected[1].mm",
							"        tests[\"Time Range Entity - Validate detected end hour\"] = responseData.data[1].entity_value.hh === data.time_range_expected[1].hh",
							"        tests[\"Time Range Entity - Validate detected range\"] = responseData.data[1].entity_value.range === data.time_range_expected[1].range",
							"        tests[\"Time Range Entity - Validate detected time slot\"] = responseData.data[1].entity_value.nn === data.time_range_expected[1].nn",
							"        ",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/time_with_range/?message={{time_range_message}}&entity_name={{time_range_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"time_with_range",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{time_range_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{time_range_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Regex Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "180b0299-b3bf-4afb-acff-1642a40ada0c",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['Regex detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Regex Entity - Validate detected original text\"] = responseData.data[0].original_text === data.regex_expected.original_text",
							"        tests[\"Regex Entity - Validate detected regex\"] = responseData.data[0].entity_value.value=== data.regex_expected.value",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/regex/?message={{regex_message}}&entity_name={{regex_entity_name}}&regex={{regex_regex}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"regex",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{regex_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{regex_entity_name}}"
						},
						{
							"key": "regex",
							"value": "{{regex_regex}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f0342e22-da7b-44f2-a55b-b52050907b35",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"if(responseData.data.length === 0){",
							"        tests['Email id detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Email Entity - Validate detected original text\"] = responseData.data[0].original_text === data.email_expected.original_text",
							"        tests[\"Email Entity - Validate email id\"] = responseData.data[0].entity_value.value === data.email_expected.value",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/email/?message={{email_message}}&entity_name={{email_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"email",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{email_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{email_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Budget Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "912756f9-cceb-4ba3-ac67-14d83c3df8e4",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['budget detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Budget Entity - Validate detected original text1\"] = responseData.data[0].original_text === data.budget_expected.original_text",
							"        tests[\"Budget Entity - Validate detected max_budget\"] = responseData.data[0].entity_value.max_budget === data.budget_expected.max_budget",
							"        tests[\"Budget Entity - Validate detected type\"] = responseData.data[0].entity_value.type === data.budget_expected.type",
							"        tests[\"Budget Entity - Validate detected min_budget\"] = responseData.data[0].entity_value.min_budget === data.budget_expected.min_budget",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/budget/?message={{budget_message}}&entity_name={{budget_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"budget",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{budget_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{budget_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Date Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df576c4c-f337-4964-9cfb-a7f4e5611784",
						"exec": [
							"var date = new Date();",
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data && responseData.data.length > 0){",
							"        tests[\"Date Entity - Validate detected original text\"] = responseData.data[0].original_text === data.date_expected.original_text;",
							"        tests[\"Date Entity - Validate date entity type\"] = responseData.data[0].entity_value.value.type === data.date_expected.type;",
							"        tests[\"Date Entity - Validate date entity day\"] = responseData.data[0].entity_value.value.dd === data.date_expected.dd;",
							"        tests[\"Date Entity - Validate date entity month\"] = responseData.data[0].entity_value.value.mm === data.date_expected.mm;",
							"        tests[\"Date Entity - Validate date entity year\"] = responseData.data[0].entity_value.value.yy === data.date_expected.yy;",
							"    }",
							"    else{",
							"        tests[\"date entity present\"] = true === false",
							"    }",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/date/?message={{date_message}}&entity_name={{date_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"date",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{date_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{date_entity_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Number Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1bf1b2a-f098-41d2-8c33-dd5d78ea8b4f",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"    if(responseData.data.length === 0){",
							"        tests['NUMBER detected'] = true === false;",
							"    }",
							"    else",
							"    {",
							"        if(responseData.data.length === data.number_expected.length)",
							"        {",
							"         for (i = 0; i < responseData.data.length; i++)",
							"         {",
							"        tests[\"Number Entity - Validate detected NUMBER\" + i] = responseData.data[i].entity_value.value === data.number_expected[i].value;",
							"        tests[\"Number Entity - Validate detected original text\" + i] = responseData.data[i].original_text === data.number_expected[i].original_text;",
							"    }",
							"    }",
							"    else",
							"    {",
							"        tests[\"length mismatch\"] = true;",
							"    }",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/number/?message={{number_message}}&entity_name={{number_entity_name}}&min_number_digits={{number_min_digits}}&max_number_digits={{number_max_digits}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"number",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{number_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{number_entity_name}}"
						},
						{
							"key": "min_number_digits",
							"value": "{{number_min_digits}}"
						},
						{
							"key": "max_number_digits",
							"value": "{{number_max_digits}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Phone number entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b978b73-2ca4-4263-afcb-ae44affa1fed",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    var responseData = JSON.parse(responseBody);",
							"if(responseData.data.length === 0){",
							"        tests['phone number detected'] = true === false;",
							"    }",
							"    else{",
							"        tests[\"Phone Number V1 Entity - Validate phone number\"] = responseData.data[0].entity_value.value === data.phoneV1_expected.value",
							"        tests[\"Phone Number V1 Entity - Validate detected original text\"] = responseData.data[0].original_text === data.phoneV1_expected.original_text",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{url}}/v1/phone_number/?message={{phoneV1_message}}&entity_name={{phoneV1_entity_name}}",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"phone_number",
						""
					],
					"query": [
						{
							"key": "message",
							"value": "{{phoneV1_message}}"
						},
						{
							"key": "entity_name",
							"value": "{{phoneV1_entity_name}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}