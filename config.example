# This is config.example file for chatbot_ner module similar to .env.example file to hold settings
# Copy it to a docker/.env and fill in all the values.
# Never push your personal keys and passwords to any public repository!
# Please don't add spaces around '='

NAME=chatbot_ner
DJANGODIR=/app
DJANGO_LOG_LEVEL=DEBUG
DJANGO_SETTINGS_MODULE=chatbot_ner.settings
DJANGO_WSGI_MODULE=chatbot_ner/wsgi.py
# Important: Change the value of SECRET_KEY to something else and keep it secret
SECRET_KEY=!yqqcz-v@(s@kpygpvomcuu3il0q1&qtpz)e_g0ulo-sdv%c0c

NUM_WORKERS=1
MAX_REQUESTS=1000
PORT=8081
TIMEOUT=600

# This is the primary engine to use for datastore. Valid values are one of the following: ['elasticsearch']
ENGINE=elasticsearch

# ES prefixed variables correspond to settings for elasticsearch.
# ES_URL is the complete url with auth name and password required to connect. If provided, this will override ES_HOST,
# ES_PORT, ES_AUTH_NAME, ES_AUTH_PASSWORD
# ES_HOST and ES_PORT by default is host for ES that comes up with compose

ES_URL=
ES_AUTH_NAME=
ES_AUTH_PASSWORD=
ES_SCHEME=http
ES_HOST=elasticsearch
ES_PORT=9200
ES_ALIAS=entity_data
ES_INDEX_1=entity_data_v1
ES_INDEX_2=
ES_DOC_TYPE=data_dictionary
ELASTICSEARCH_CRF_DATA_INDEX_NAME=entity_examples_data
ELASTICSEARCH_CRF_DATA_DOC_TYPE=training_dictionary

ES_BULK_MSG_SIZE=1000
ES_SEARCH_SIZE=10000

# Auth variables if ES is hosted on AWS
ES_AWS_ACCESS_KEY_ID=
ES_AWS_REGION=
ES_AWS_SECRET_ACCESS_KEY=
ES_AWS_SERVICE=

DESTINATION_ES_SCHEME=
DESTINATION_HOST=
DESTINATION_PORT=

# In order to enable entity detection for multiple languages, we use google translate. Please enter the key(optional)
GOOGLE_TRANSLATE_API_KEY=

# Deprecated CRF models configuration
MODELS_PATH=
WORD_EMBEDDING_REMOTE_URL=
EMBEDDINGS_PATH_VECTORS=
EMBEDDINGS_PATH_VOCAB=
CITY_MODEL_PATH=
CITY_MODEL_TYPE=crf
CRF_MODEL_S3_BUCKET_NAME=
CRF_MODEL_S3_BUCKET_REGION=
DATE_MODEL_PATH=
DATE_MODEL_TYPE=
